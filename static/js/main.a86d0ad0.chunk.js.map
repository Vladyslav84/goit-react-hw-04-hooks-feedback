{"version":3,"sources":["components/Statistics/Statistics .jsx","components/Notification/Notification.js","components/FeedbackOptions/FeedbackOptions .jsx","App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css","components/Statistics/Statistics.module.css"],"names":["Statistics","good","neutral","bad","total","positivePercentage","className","s","Statlist","Notification","message","propType","PropTypes","array","isRequired","FeedbackOptions","propspArr","onLeaveFeedback","map","btn","StatlistItem","onClick","button","type","App","useState","setGood","setNeutral","setBad","countTotalFeedback","evt","target","innerHTML","state","TotalFeedBack","Math","floor","countPositiveFeedbackPercentage","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"kOAwBeA,EApBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC7C,OACI,qBAAIC,UAAWC,IAAEC,SAAjB,UACI,wCAAYP,KACZ,2CAAeC,KACf,uCAAWC,KACX,yCAAaC,KACb,qDAAyBC,S,OCR/BI,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OACI,4BAAIA,KAGZD,EAAaE,SAAW,CACpBD,Q,OAASE,EAAUC,MAAMC,YAEdL,Q,gBCcAM,EArBS,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,UAAWC,EAAsB,EAAtBA,gBAElC,OACI,oBAAIX,UAAWC,IAAEC,SAAjB,SACKQ,EAAUE,KAAI,SAACC,GAAD,OAEX,oBAAIb,UAAWC,IAAEa,aAAjB,SACI,wBAAQC,QAASJ,EAAiBX,UAAWC,IAAEe,OAAQC,KAAK,SAA5D,SAAsEJ,KADtCA,SCqDrCK,MA1Df,WAEI,MAAwBC,mBAAS,GAAjC,mBAAOxB,EAAP,KAAayB,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOvB,EAAP,KAAgByB,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOtB,EAAP,KAAYyB,EAAZ,KAeA,SAASC,IAEL,OADY3B,EAAUC,EAAMF,EAahC,OACQ,qCACI,uDACA,mCACI,cAAC,EAAD,CACIe,UAPH,CAAC,OAAQ,UAAW,OAQjBC,gBAjCI,SAACa,GAEQ,SAAzBA,EAAIC,OAAOC,WACVN,GAAQ,SAAAO,GAAK,OAAGA,EAAO,KAEC,YAAzBH,EAAIC,OAAOC,WACVL,GAAW,SAAAM,GAAK,OAAGA,EAAO,KAEF,QAAzBH,EAAIC,OAAOC,WACVJ,GAAO,SAAAK,GAAK,OAAGA,EAAO,UA4BnB,4CAC0B,IAAzBJ,IAA6B,cAAC,EAAD,CAAcnB,QAAQ,sBAChD,cAAC,EAAD,CACIT,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOyB,IACPxB,mBA3BpB,WAEI,IAAI6B,EAAgBhC,EAAUC,EAAMF,EAEpC,OADkBkC,KAAKC,MAAMnC,EAAOiC,EAAgB,KAAO,IAwBvBG,SClD5CC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,OAAS,gCAAgC,SAAW,kCAAkC,aAAe,wC,kBCAvHD,EAAOC,QAAU,CAAC,SAAW,gC","file":"static/js/main.a86d0ad0.chunk.js","sourcesContent":["import React from 'react';\nimport s from './Statistics.module.css';\nimport PropTypes from 'prop-types';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n    return (\n        <ul className={s.Statlist}>\n            <li >Good: {good}</li>\n            <li >Neutral: {neutral}</li>\n            <li >Bad: {bad}</li>\n            <li >Total: {total}</li>\n            <li >Positive feedback: {positivePercentage}</li>\n        </ul>\n    )\n}\n\nStatistics.propTypes = {\n    good : PropTypes.number.isRequired,\n    neutral : PropTypes.number.isRequired,\n    bad : PropTypes.number.isRequired,\n    total : PropTypes.number.isRequired,\n    positivePercentage : PropTypes.string.isRequired\n}\n\nexport default Statistics;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => {\n    return (\n        <p>{message}</p>\n    )\n}\nNotification.propType = {\n    message: PropTypes.array.isRequired,\n}\nexport default Notification;","import React from 'react';\nimport s from './FeedbackOptions.module.css';\nimport PropTypes from 'prop-types';\n\nconst FeedbackOptions = ({ propspArr, onLeaveFeedback }) => {\n\n    return (\n        <ul className={s.Statlist}>\n            {propspArr.map((btn) => (\n\n                <li className={s.StatlistItem} key={btn}>\n                    <button onClick={onLeaveFeedback} className={s.button} type=\"button\">{btn}</button>\n                </li>\n\n            ))}\n        </ul>\n    )\n\n}\n\nFeedbackOptions.propTypes = {\n    propspArr: PropTypes.array.isRequired,\n    onLeaveFeedback: PropTypes.func.isRequired\n}\n\nexport default FeedbackOptions;","import React, { useState } from 'react';\nimport Statistics from './components/Statistics/Statistics '\nimport Notification from './components/Notification/Notification'\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions '\n\nfunction App() {\n\n    const [good, setGood] = useState(0);\n    const [neutral, setNeutral] = useState(0);\n    const [bad, setBad] = useState(0);\n\n    const onLeaveFeedback = (evt) => {\n\n        if (evt.target.innerHTML === \"Good\") {\n             setGood(state=> state +1);\n        }\n        if (evt.target.innerHTML === \"Neutral\") {\n             setNeutral(state=> state +1);\n         }\n        if (evt.target.innerHTML === \"Bad\") {\n             setBad(state=> state +1);\n         }\n    }\n\n    function countTotalFeedback () {\n        let total = neutral + bad + good;\n        return total;\n    };\n    function countPositiveFeedbackPercentage (){\n\n        let TotalFeedBack = neutral + bad + good;\n        let PosFeedBack = Math.floor(good / TotalFeedBack * 100) + \"%\";\n        return PosFeedBack;\n    };\n\n\n    const stateArr = ['Good', 'Neutral', 'Bad'];\n\n    return (\n            <>\n                <h2>Please leave feedback</h2>\n                <>\n                    <FeedbackOptions\n                        propspArr={stateArr}\n                        onLeaveFeedback={onLeaveFeedback}\n                    />\n                </>\n\n                <h2>Statistics</h2>\n                {countTotalFeedback() === 0 ? <Notification message=\"No feedback given\" /> :\n                    <Statistics\n                        good={good}\n                        neutral={neutral}\n                        bad={bad}\n                        total={countTotalFeedback()}\n                        positivePercentage={countPositiveFeedbackPercentage()}\n                    />}\n            </>\n\n    );\n\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__3UdWO\",\"Statlist\":\"FeedbackOptions_Statlist__1As3F\",\"StatlistItem\":\"FeedbackOptions_StatlistItem__2lVkb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Statlist\":\"Statistics_Statlist__3W0ND\"};"],"sourceRoot":""}